(()=>{var e={};e.id=122,e.ids=[122],e.modules={67096:e=>{"use strict";e.exports=require("bcrypt")},38013:e=>{"use strict";e.exports=require("mongodb")},11185:e=>{"use strict";e.exports=require("mongoose")},20399:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},79348:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},30412:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},27790:e=>{"use strict";e.exports=require("assert")},78893:e=>{"use strict";e.exports=require("buffer")},84770:e=>{"use strict";e.exports=require("crypto")},17702:e=>{"use strict";e.exports=require("events")},92048:e=>{"use strict";e.exports=require("fs")},32615:e=>{"use strict";e.exports=require("http")},35240:e=>{"use strict";e.exports=require("https")},19801:e=>{"use strict";e.exports=require("os")},55315:e=>{"use strict";e.exports=require("path")},86624:e=>{"use strict";e.exports=require("querystring")},17360:e=>{"use strict";e.exports=require("url")},21764:e=>{"use strict";e.exports=require("util")},71568:e=>{"use strict";e.exports=require("zlib")},30267:(e,r,t)=>{"use strict";t.r(r),t.d(r,{patchFetch:()=>x,routeModule:()=>S,serverHooks:()=>O,workAsyncStorage:()=>v,workUnitAsyncStorage:()=>q});var s={};t.r(s),t.d(s,{DELETE:()=>h,GET:()=>w,POST:()=>f,PUT:()=>g,dynamic:()=>l,revalidate:()=>m});var i=t(88797),n=t(10042),a=t(58492),o=t(11185),u=t.n(o),c=t(44753);new o.Schema({name:{type:String,required:!0},price:{type:Number,required:!0}});let p=new(u()).Schema({name:{type:String,required:!0},description:{type:String},basePrice:{type:Number,required:!0},sizes:[{name:{type:String,required:!0},price:{type:Number,required:!0}}],extraIngredientPrices:[{name:{type:String,required:!0},price:{type:Number,required:!0}}],category:{type:u().Schema.Types.ObjectId,ref:"Category",default:null},image:{type:String},stock:{type:Number,required:!0,default:0}}),d=u().models.MenuItem||u().model("MenuItem",p),l="force-static",m=60;async function y(){if(!u().connection.readyState)try{await u().connect(process.env.MONGO_URL,{useNewUrlParser:!0,useUnifiedTopology:!0}),console.log("Database connected successfully")}catch(e){throw console.error("Database connection failed:",e),Error("Database connection failed")}}async function w(){try{await y();let e=await d.find();return new Response(JSON.stringify(e),{status:200})}catch(e){return console.error("Error in GET /api/menu-items:",e),new Response(JSON.stringify({error:"Failed to retrieve menu items"}),{status:500})}}async function f(e){try{await y();let r=await e.json();if(r.category&&!u().Types.ObjectId.isValid(r.category))throw Error("Invalid category ObjectId");r.category||(r.category=null),(void 0===r.stock||isNaN(r.stock))&&(r.stock=0);let t=await d.create(r);return new Response(JSON.stringify(t),{status:201})}catch(e){return console.error("Error in POST /api/menu-items:",e),new Response(JSON.stringify({error:e.message||"Failed to create menu item"}),{status:500})}}async function g(e){try{await y();let{_id:r,stock:t,...s}=await e.json();if(void 0!==t&&!isNaN(t)){let e=await d.findByIdAndUpdate(r,{stock:t},{new:!0});return new Response(JSON.stringify(e),{status:200})}if(await (0,c.GJ)(e)){let e=await d.findByIdAndUpdate(r,s,{new:!0});return new Response(JSON.stringify(e),{status:200})}return new Response(JSON.stringify({error:"Unauthorized"}),{status:403})}catch(e){return console.error("Error in PUT /api/menu-items:",e),new Response(JSON.stringify({error:"Failed to update menu item"}),{status:500})}}async function h(e){try{await y();let r=new URL(e.url).searchParams.get("_id");return await d.deleteOne({_id:r}),new Response(JSON.stringify({success:!0}),{status:200})}catch(e){return console.error("Error in DELETE /api/menu-items:",e),new Response(JSON.stringify({error:"Failed to delete menu item"}),{status:500})}}let S=new i.AppRouteRouteModule({definition:{kind:n.RouteKind.APP_ROUTE,page:"/api/menu-items/route",pathname:"/api/menu-items",filename:"route",bundlePath:"app/api/menu-items/route"},resolvedPagePath:"C:\\xampp\\htdocs\\codebrew2o\\codebrew2\\src\\app\\api\\menu-items\\route.js",nextConfigOutput:"",userland:s}),{workAsyncStorage:v,workUnitAsyncStorage:q,serverHooks:O}=S;function x(){return(0,a.patchFetch)({workAsyncStorage:v,workUnitAsyncStorage:q})}},78031:()=>{},35303:()=>{},37467:(e,r,t)=>{"use strict";let s;t.d(r,{L:()=>l});var i=t(82045),n=t(71250),a=t(97990),o=t(38013);if(!process.env.MONGO_URL)throw Error('Invalid/Missing environment variable: "MONGO_URL"');let u=process.env.MONGO_URL;s=new o.MongoClient(u,{maxPoolSize:10,serverSelectionTimeoutMS:5e3}).connect().catch(e=>{throw console.error("Failed to connect to MongoDB:",e),e});var c=t(73765),p=t(44753),d=t(68716);let l={secret:process.env.SECRET,adapter:(0,a.dJ)(s),providers:[(0,n.Z)({clientId:process.env.GOOGLE_CLIENT_ID,clientSecret:process.env.GOOGLE_CLIENT_SECRET}),(0,i.Z)({name:"Credentials",credentials:{email:{label:"Email",type:"email",placeholder:"test@example.com"},password:{label:"Password",type:"password"}},async authorize(e){if(!e?.email||!e?.password)throw Error("Email and password are required");if("string"!=typeof e.password||""===e.password.trim())throw Error("Password is required and cannot be empty");if("tealerin.com"!==e.email.split("@")[1])throw Error("Only users with the domain are allowed to log in");await (0,c.u)();let r=await (0,p.CX)(e.email);if(!r)throw Error("No user found with that email");if(!await (0,p.Gv)(e.password,r.password))throw Error("Invalid password");let t=await d.a.findOne({email:e.email});if(!t||!t.isVerified)throw Error("Your account is not verified by the admin");return{email:r.email,name:r.name}}})],pages:{signIn:"/login"},session:{strategy:"jwt"},callbacks:{jwt:async({token:e,user:r})=>(r&&(e.email=r.email,e.name=r.name),e),session:async({session:e,token:r})=>(e.email=r.email,e.name=r.name,e)}}},73765:(e,r,t)=>{"use strict";t.d(r,{u:()=>n});var s=t(11185),i=t.n(s);async function n(){i().connections[0].readyState||await i().connect(process.env.MONGO_URL)}t(83775).config()},44753:(e,r,t)=>{"use strict";t.d(r,{CX:()=>c,GJ:()=>d,Gv:()=>p});var s=t(67096),i=t.n(s),n=t(82457),a=t(68716),o=t(38370),u=t(37467);async function c(e){return await n.n.findOne({email:e})}let p=async(e,r)=>i().compare(e,r);async function d(){let e=await (0,o.getServerSession)(u.L),r=e?.user?.email;if(!r)return!1;let t=await a.a.findOne({email:r});return!!t&&t.admin}},82457:(e,r,t)=>{"use strict";t.d(r,{n:()=>n});var s=t(11185);let i=new s.Schema({name:{type:String},email:{type:String,required:!0,unique:!0},password:{type:String},admin:{type:Boolean,default:!1},isVerified:{type:Boolean,default:!1}},{timestamps:!0}),n=s.models?.User||(0,s.model)("User",i)},68716:(e,r,t)=>{"use strict";t.d(r,{a:()=>n});var s=t(11185);let i=new s.Schema({email:{type:String,required:!0,unique:!0},image:{type:String},admin:{type:Boolean,default:!1},isVerified:{type:Boolean,default:!1},phone:{type:String},streetAddress:{type:String}},{timestamps:!0}),n=s.models.UserInfo||(0,s.model)("UserInfo",i)}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[492,616],()=>t(30267));module.exports=s})();